#!/usr/bin/env python
# -*- coding: utf-8 -*-

import numpy as np
import sys

from sklearn.ensemble import RandomForestClassifier
from src.lib.common import get_data_dir, get_output_dir
from src.tcofils.tcofils import generate_sl_dataset, apply_random_forest_regressor

# dataset generation parameters
normalization_method = "user_avg"
factorization_method = "svd"
num_factors = 8
include_time = "weekday"

# random forest
num_trees = 50
num_folds = 10

# user_id movie_id rating timestamp
ratings = np.genfromtxt(get_data_dir()+"/ml-100k/ml-100k/u.data", delimiter='\t')

supervised_learning_dataset = generate_sl_dataset(
    ratings,
    normalization_method=normalization_method,
    factorization_method=factorization_method,
    num_factors=num_factors, 
    include_time=include_time)

if include_time:
    output_file = get_output_dir()+"/tcofils-dataset-{0}-factors-time-{1}.csv".format(num_factors,include_time)
else:
    output_file = get_output_dir()+"/tcofils-dataset-{0}-factors.csv".format(num_factors)

np.savetxt(output_file,supervised_learning_dataset,delimiter=",",fmt='%.5f')

mae,rmse = apply_random_forest_regressor(
    supervised_learning_dataset,
    num_trees = num_trees,
    num_folds = num_folds)

print("MAE={0:.5f}, RMSE={1:0.5f}".format(mae,rmse))
